services:
  accountdb:
    container_name: account-db
    ports:
      - '3307:3306'
    environment:
      MYSQL_DATABASE: 'account_db'
    extends:
      file: common-config.yml
      service: microservices-database-config

  carddb:
    container_name: card-db
    ports:
      - '3308:3306'
    environment:
      MYSQL_DATABASE: 'card_db'
    extends:
      file: common-config.yml
      service: microservices-database-config

  loandb:
    container_name: loan-db
    ports:
      - '3309:3306'
    environment:
      MYSQL_DATABASE: 'loan_db'
    extends:
      file: common-config.yml
      service: microservices-database-config

# Temporarily disable RabbitMQ server (Spring Cloud Bus) due to low-end PC resources.
# If you want to use Spring Cloud Bus, remove all related RabbitMQ and Spring Cloud Bus service configurations in application.yml and comments from the file.
# Specifically, for services like account, loan, and card services that use Spring Cloud Bus, remove the comments to enable it.
# RabbitMQ consumes a lot of resources, and my current PC configuration is not powerful enough to run it alongside other services.

#  rabbitmq:
#    image: rabbitmq:4.0-management
#    hostname: rabbitmq
#    container_name: rabbit-mq
#    ports:
#      - '5672:5672'
#      - '15672:15672'
#    healthcheck:
#      test: ["CMD-SHELL", "rabbitmq-diagnostics check_port_connectivity || exit 1"]
#      interval: 10s
#      timeout: 5s
#      retries: 10
#      start_period: 10s
#    extends:
#      file: common-config.yml
#      service: network-deploy-service

  configserver:
    image: 'thienan8928/configserver:v1'
    build:
      context: ../configserver
      dockerfile: ../configserver/Dockerfile
    container_name: config-server
    ports:
      - '8083:8083'
#    depends_on:
#      rabbitmq:
#        condition: service_healthy
    healthcheck:
      test: 'curl --fail --silent localhost:8083/actuator/health/readiness | grep UP || exit 1'
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservices-base-config

  account:
    image: 'thienan8928/account:v1'
    build:
      context: ../account
      dockerfile: ../account/Dockerfile
    container_name: account
    ports:
      - '8080:8080'
    environment:
      SPRING_APPLICATION_NAME: 'account'
      SPRING_DATASOURCE_URL: 'jdbc:mysql://accountdb:3306/account_db?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false'
      SPRING_PROFILES_ACTIVE: '${SPRING_PROFILES_ACTIVE:-default}'
    depends_on:
      accountdb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservices-configserver-config

  card:
    image: 'thienan8928/card:v1'
    build:
      context: ../card
      dockerfile: ../card/Dockerfile
    container_name: card
    ports:
      - '8081:8081'
    environment:
      SPRING_APPLICATION_NAME: 'card'
      SPRING_DATASOURCE_URL: 'jdbc:mysql://carddb:3306/card_db?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false'
      SPRING_PROFILES_ACTIVE: '${SPRING_PROFILES_ACTIVE:-default}'
    depends_on:
      carddb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservices-configserver-config

  loan:
    image: 'thienan8928/loan:v1'
    build:
      context: ../loan
      dockerfile: ../loan/Dockerfile
    container_name: loan
    ports:
      - '8082:8082'
    environment:
      SPRING_APPLICATION_NAME: 'loan'
      SPRING_DATASOURCE_URL: 'jdbc:mysql://loandb:3306/loan_db?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false'
      SPRING_PROFILES_ACTIVE: '${SPRING_PROFILES_ACTIVE:-default}'
    depends_on:
      loandb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservices-configserver-config

networks:
  my-network:
    driver: bridge